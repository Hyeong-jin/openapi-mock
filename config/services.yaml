parameters:
  env(SWAGGER_MOCK_LOG_LEVEL): 'error'
  env(SWAGGER_MOCK_CACHE_STRATEGY): 'disabled'
  env(SWAGGER_MOCK_CACHE_DIRECTORY): '/dev/shm/openapi-cache'
  env(SWAGGER_MOCK_CACHE_TTL): 0

  locale: 'en'
  specification_url: '%env(SWAGGER_MOCK_SPECIFICATION_URL)%'
  cache_strategy: '%env(SWAGGER_MOCK_CACHE_STRATEGY)%'
  cache_directory: '%env(SWAGGER_MOCK_CACHE_DIRECTORY)%'
  cache_ttl: '%env(SWAGGER_MOCK_CACHE_TTL)%'
  log_level: '%env(SWAGGER_MOCK_LOG_LEVEL)%'

  type_parser_map:
    object: 'App\OpenAPI\Parsing\Type\Composite\ObjectTypeParser'
    array: 'App\OpenAPI\Parsing\Type\Composite\ArrayTypeParser'
    boolean: 'App\OpenAPI\Parsing\Type\Primitive\BooleanTypeParser'
    integer: 'App\OpenAPI\Parsing\Type\Primitive\IntegerTypeParser'
    number: 'App\OpenAPI\Parsing\Type\Primitive\NumberTypeParser'
    string: 'App\OpenAPI\Parsing\Type\Primitive\StringTypeParser'
    oneOf: 'App\OpenAPI\Parsing\Type\Combined\CombinedTypeParser'
    allOf: 'App\OpenAPI\Parsing\Type\Combined\CombinedTypeParser'
    anyOf: 'App\OpenAPI\Parsing\Type\Combined\CombinedTypeParser'

  value_generator_map:
    App\Mock\Parameters\Schema\Type\Primitive\BooleanType: 'App\Mock\Generation\Value\Primitive\RandomBooleanGenerator'
    App\Mock\Parameters\Schema\Type\Primitive\IntegerType: 'App\Mock\Generation\Value\Primitive\RandomIntegerGenerator'
    App\Mock\Parameters\Schema\Type\Primitive\NumberType: 'App\Mock\Generation\Value\Primitive\RandomNumberGenerator'
    App\Mock\Parameters\Schema\Type\Primitive\StringType: 'App\Mock\Generation\Value\Primitive\FakerStringGenerator'
    App\Mock\Parameters\Schema\Type\Composite\ObjectType: 'App\Mock\Generation\Value\Composite\ObjectValueGenerator'
    App\Mock\Parameters\Schema\Type\Composite\FreeFormObjectType: 'App\Mock\Generation\Value\Composite\FreeFormObjectValueGenerator'
    App\Mock\Parameters\Schema\Type\Composite\HashMapType: 'App\Mock\Generation\Value\Composite\HashMapValueGenerator'
    App\Mock\Parameters\Schema\Type\Composite\ArrayType: 'App\Mock\Generation\Value\Composite\ArrayValueGenerator'
    App\Mock\Parameters\Schema\Type\Combined\OneOfType: 'App\Mock\Generation\Value\Combined\OneOfValueGenerator'
    App\Mock\Parameters\Schema\Type\Combined\AllOfType: 'App\Mock\Generation\Value\Combined\AllOfValueGenerator'
    App\Mock\Parameters\Schema\Type\Combined\AnyOfType: 'App\Mock\Generation\Value\Combined\AnyOfValueGenerator'
    App\Mock\Parameters\Schema\Type\InvalidType: 'App\Mock\Generation\Value\InvalidValueGenerator'


services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      $endpointParser: '@App\OpenAPI\Parsing\EndpointParser'
      $responseParser: '@App\OpenAPI\Parsing\ResponseParser'
      $responseCollectionParser: '@App\OpenAPI\Parsing\ResponseCollectionParser'
      $schemaParser: '@App\OpenAPI\Parsing\SchemaParser'
      $delegatingSchemaParser: '@App\OpenAPI\Parsing\Type\DelegatingSchemaParser'
      $resolvingSchemaParser: '@App\OpenAPI\Parsing\Type\ReferenceResolvingSchemaParser'

  App\:
    resource: '../src/*'
    exclude: '../src/{Kernel.php}'

  App\EventListener\RequestListener:
    tags:
      - { name: kernel.event_listener, event: kernel.request, priority: 48 }

  App\Mock\EndpointRepository:
    arguments:
      - '@specification_loader'
      - '%specification_url%'

  specification_loader_factory:
    class: App\OpenAPI\SpecificationLoaderFactory
    arguments:
      $cache: '@specification_cache'

  specification_loader:
    class: App\OpenAPI\SpecificationLoaderInterface
    factory: ['@specification_loader_factory', 'createSpecificationLoader']
    arguments:
      - '%cache_strategy%'

  specification_cache:
    class: Symfony\Component\Cache\Simple\FilesystemCache
    arguments:
      - 'openapi'
      - '%cache_ttl%'
      - '%cache_directory%'

  type_parser_service_locator:
    class: Symfony\Component\DependencyInjection\ServiceLocator

  value_generator_service_locator:
    class: Symfony\Component\DependencyInjection\ServiceLocator

  App\OpenAPI\Parsing\Type\TypeParserLocator:
    arguments:
      - '@type_parser_service_locator'
      - '%type_parser_map%'

  App\Mock\Generation\ValueGeneratorLocator:
    arguments:
      - '@value_generator_service_locator'
      - '%value_generator_map%'

  Faker\Generator:
    class: Faker\Generator
    factory: ['App\Faker\FakerGeneratorFactory', 'createGenerator']

  GuzzleHttp\ClientInterface:
    class: GuzzleHttp\Client

  Negotiation\Negotiator:
    class: Negotiation\Negotiator

  App\OpenAPI\Parsing\Error\ParsingErrorHandlerInterface: '@App\OpenAPI\Parsing\Error\LoggingErrorHandler'
